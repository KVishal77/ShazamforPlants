{"ast":null,"code":"import axios from \"axios\";\n\n// Axios instance with baseURL (env ‚Üí fallback to localhost:5000)\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// üîç Search plant by name (AI/DB lookup)\nexport async function searchPlantByName(name) {\n  try {\n    const res = await API.get(\"/api/plant\", {\n      params: {\n        name\n      }\n    });\n    return res.data; // { name, imageUrl, source }\n  } catch (err) {\n    console.error(\"searchPlantByName error:\", err.message);\n    throw err;\n  }\n}\n\n// üìã Get all saved plants\nexport async function getPlants() {\n  try {\n    const res = await API.get(\"/api/plants\");\n    // backend should return { plants: [...] }\n    return res.data.plants || [];\n  } catch (err) {\n    console.error(\"getPlants error:\", err.message);\n    throw err;\n  }\n}\n\n// üîé Get one plant by ID\nexport async function getPlantById(id) {\n  try {\n    const res = await API.get(`/api/plant/${id}`);\n    return res.data;\n  } catch (err) {\n    console.error(\"getPlantById error:\", err.message);\n    throw err;\n  }\n}\n\n// ‚ûï Save / create plant\nexport async function createPlant(payload) {\n  try {\n    const res = await API.post(\"/api/plants\", payload);\n    return res.data; // { success, id }\n  } catch (err) {\n    console.error(\"createPlant error:\", err.message);\n    throw err;\n  }\n}\n\n// ‚ùå Delete plant\nexport async function deletePlant(id) {\n  try {\n    const res = await API.delete(`/api/plant/${id}`);\n    return res.data; // { success: true }\n  } catch (err) {\n    console.error(\"deletePlant error:\", err.message);\n    throw err;\n  }\n}","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","headers","searchPlantByName","name","res","get","params","data","err","console","error","message","getPlants","plants","getPlantById","id","createPlant","payload","post","deletePlant","delete"],"sources":["D:/ShazamforPlants/frontend/src/api/plantAPI.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Axios instance with baseURL (env ‚Üí fallback to localhost:5000)\r\nconst API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// üîç Search plant by name (AI/DB lookup)\r\nexport async function searchPlantByName(name) {\r\n  try {\r\n    const res = await API.get(\"/api/plant\", { params: { name } });\r\n    return res.data; // { name, imageUrl, source }\r\n  } catch (err) {\r\n    console.error(\"searchPlantByName error:\", err.message);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// üìã Get all saved plants\r\nexport async function getPlants() {\r\n  try {\r\n    const res = await API.get(\"/api/plants\");\r\n    // backend should return { plants: [...] }\r\n    return res.data.plants || [];\r\n  } catch (err) {\r\n    console.error(\"getPlants error:\", err.message);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// üîé Get one plant by ID\r\nexport async function getPlantById(id) {\r\n  try {\r\n    const res = await API.get(`/api/plant/${id}`);\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(\"getPlantById error:\", err.message);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// ‚ûï Save / create plant\r\nexport async function createPlant(payload) {\r\n  try {\r\n    const res = await API.post(\"/api/plants\", payload);\r\n    return res.data; // { success, id }\r\n  } catch (err) {\r\n    console.error(\"createPlant error:\", err.message);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// ‚ùå Delete plant\r\nexport async function deletePlant(id) {\r\n  try {\r\n    const res = await API.delete(`/api/plant/${id}`);\r\n    return res.data; // { success: true }\r\n  } catch (err) {\r\n    console.error(\"deletePlant error:\", err.message);\r\n    throw err;\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,eAAeC,iBAAiBA,CAACC,IAAI,EAAE;EAC5C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,YAAY,EAAE;MAAEC,MAAM,EAAE;QAAEH;MAAK;IAAE,CAAC,CAAC;IAC7D,OAAOC,GAAG,CAACG,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAACG,OAAO,CAAC;IACtD,MAAMH,GAAG;EACX;AACF;;AAEA;AACA,OAAO,eAAeI,SAASA,CAAA,EAAG;EAChC,IAAI;IACF,MAAMR,GAAG,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,aAAa,CAAC;IACxC;IACA,OAAOD,GAAG,CAACG,IAAI,CAACM,MAAM,IAAI,EAAE;EAC9B,CAAC,CAAC,OAAOL,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEF,GAAG,CAACG,OAAO,CAAC;IAC9C,MAAMH,GAAG;EACX;AACF;;AAEA;AACA,OAAO,eAAeM,YAAYA,CAACC,EAAE,EAAE;EACrC,IAAI;IACF,MAAMX,GAAG,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,cAAcU,EAAE,EAAE,CAAC;IAC7C,OAAOX,GAAG,CAACG,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAACG,OAAO,CAAC;IACjD,MAAMH,GAAG;EACX;AACF;;AAEA;AACA,OAAO,eAAeQ,WAAWA,CAACC,OAAO,EAAE;EACzC,IAAI;IACF,MAAMb,GAAG,GAAG,MAAMT,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAED,OAAO,CAAC;IAClD,OAAOb,GAAG,CAACG,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAACG,OAAO,CAAC;IAChD,MAAMH,GAAG;EACX;AACF;;AAEA;AACA,OAAO,eAAeW,WAAWA,CAACJ,EAAE,EAAE;EACpC,IAAI;IACF,MAAMX,GAAG,GAAG,MAAMT,GAAG,CAACyB,MAAM,CAAC,cAAcL,EAAE,EAAE,CAAC;IAChD,OAAOX,GAAG,CAACG,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAACG,OAAO,CAAC;IAChD,MAAMH,GAAG;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}